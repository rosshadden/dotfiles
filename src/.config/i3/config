################
# VARIABLES
################

set $super Mod4
set $alt Mod1

set $up k
set $down j
set $left h
set $right l

set $numLab 0
set $numWeb 1
set $numDev 2
set $numRemote 3
set $numHack 4
set $numFiles 5
set $numMedia 6
set $numLit 7
set $numMonitor 8
set $numRun 9
set $numChat 10
set $numDesign 11
set $numGames 12

set $nameLab lab
set $nameWeb web
set $nameDev dev
set $nameRemote remote
set $nameHack hack
set $nameFiles files
set $nameMedia media
set $nameLit lit
set $nameMonitor monitor
set $nameRun run
set $nameChat chat
set $nameDesign design
set $nameGames games

set $wsLab Ôç© lab
set $wsWeb ÔÑµ web
set $wsDev ÔÑ° dev
set $wsRemote üì° remote
set $wsHack ÔÑ† hack
set $wsFiles ÔÅº files
set $wsMedia ÔÜò media
set $wsLit Ôèê lit
set $wsMonitor ÔÉ§ monitor
set $wsRun Ôäû run
set $wsChat ÔÉ¶ chat
set $wsDesign Ôà¨ design
set $wsGames ÔÑõ games

set $macro1 XF86Tools
set $macro2 XF86Launch5
set $macro3 XF86Launch6
set $macro4 XF86Launch7
set $macro5 XF86Launch8

# return to the default mode
set $return mode "PREFIX"
set $exit mode "default"

# default apps
set $terminal ~/bin/termoil
set $runTmux ~/bin/termoil -- tmux -u new-session -A -s

# UI
set $borderWidth 2
set $borderFloatingWidth 4

################
# OPTIONS
################

font pango:Fira Code, Icons 6

workspace_layout stacking
workspace_auto_back_and_forth no

# Use Mouse+$super to drag floating windows to their wanted position
floating_modifier $super

# Don't follow mouse focus
focus_follows_mouse no

# window borders
new_window pixel $borderWidth
new_float pixel $borderFloatingWidth

mouse_warping none

# gaps

gaps inner 8
gaps outer 2
smart_gaps on

################
# MAPPINGS
################

# switch to workspace
bindsym $super+grave        mark LAST; workspace number 0 $wsLab
bindsym $super+1            mark LAST; workspace number 1 $wsWeb
bindsym $super+2            mark LAST; workspace number 2 $wsDev
bindsym $super+3            mark LAST; workspace number 3 $wsRemote
bindsym $super+4            mark LAST; workspace number 4 $wsHack
bindsym $super+5            mark LAST; workspace number 5 $wsFiles
bindsym $super+6            mark LAST; workspace number 6 $wsMedia
bindsym $super+7            mark LAST; workspace number 7 $wsLit
bindsym $super+8            mark LAST; workspace number 8 $wsMonitor
bindsym $super+9            mark LAST; workspace number 9 $wsRun
bindsym $super+0            mark LAST; workspace number 10 $wsChat
bindsym $super+bracketleft  mark LAST; workspace number 11 $wsDesign
bindsym $super+bracketright mark LAST; workspace number 12 $wsGames

# move focused container to workspace
bindsym $super+Shift+grave        move container to workspace number 0 $wsLab;     workspace number 0
bindsym $super+Shift+1            move container to workspace number 1 $wsWeb;     workspace number 1
bindsym $super+Shift+2            move container to workspace number 2 $wsDev;     workspace number 2
bindsym $super+Shift+3            move container to workspace number 3 $wsRemote;  workspace number 3
bindsym $super+Shift+4            move container to workspace number 4 $wsHack;    workspace number 4
bindsym $super+Shift+5            move container to workspace number 5 $wsFiles;   workspace number 5
bindsym $super+Shift+6            move container to workspace number 6 $wsMedia;   workspace number 6
bindsym $super+Shift+7            move container to workspace number 7 $wsLit;     workspace number 7
bindsym $super+Shift+8            move container to workspace number 8 $wsMonitor; workspace number 8
bindsym $super+Shift+9            move container to workspace number 9 $wsRun;     workspace number 9
bindsym $super+Shift+0            move container to workspace number 10 $wsChat;   workspace number 10
bindsym $super+Shift+bracketleft  move container to workspace number 11 $wsDesign; workspace number 11
bindsym $super+Shift+bracketright move container to workspace number 12 $wsGames;  workspace number 12

# close focused window
bindsym $super+c kill

# change focus between tiling / floating windows
bindsym $super+BackSpace mark LAST; focus mode_toggle

# change focus
bindsym $super+$up mark LAST; focus up
bindsym $super+$down mark LAST; focus down
bindsym $super+$left mark LAST; focus left
bindsym $super+$right mark LAST; focus right

# move focused window/container
bindsym $super+Shift+$up move up
bindsym $super+Shift+$down move down
bindsym $super+Shift+$left move left
bindsym $super+Shift+$right move right

# focus adjacent outputs
bindsym $super+Control+$up mark LAST; focus output up
bindsym $super+Control+$down mark LAST; focus output down
bindsym $super+Control+$left mark LAST; focus output left
bindsym $super+Control+$right mark LAST; focus output right

# move workspace to adjacent outputs
bindsym $super+Control+Shift+$up move workspace to output up
bindsym $super+Control+Shift+$down move workspace to output down
bindsym $super+Control+Shift+$left move workspace to output left
bindsym $super+Control+Shift+$right move workspace to output right

# swap workspace with adjacent outputs
bindsym $super+$alt+Shift+$up mark TEMP; focus output up; mark LAST; move workspace to output down; [con_mark="TEMP"] focus; move workspace to output up; mark LAST
bindsym $super+$alt+Shift+$down mark TEMP; focus output down; mark LAST; move workspace to output up; [con_mark="TEMP"] focus; move workspace to output down; mark LAST
bindsym $super+$alt+Shift+$left mark TEMP; focus output left; mark LAST; move workspace to output right; [con_mark="TEMP"] focus; move workspace to output left; mark LAST
bindsym $super+$alt+Shift+$right mark TEMP; focus output right; mark LAST; move workspace to output left; [con_mark="TEMP"] focus; move workspace to output right; mark LAST

# focus next/previous workspace on current output
bindsym $super+p mark LAST; workspace prev_on_output
bindsym $super+n mark LAST; workspace next_on_output
# changes focus on scroll (even without super) which is üëé
bindsym --whole-window --border $super+button6 mark LAST; workspace prev_on_output
bindsym --whole-window --border $super+button7 mark LAST; workspace next_on_output

# move container to next/previous workspace
bindsym $super+Shift+n move to workspace next_on_output; workspace next_on_output
bindsym $super+Shift+p move to workspace prev_on_output; workspace prev_on_output

# focus next/previous workspace
bindsym $super+b mark LAST; workspace prev
bindsym $super+f mark LAST; workspace next

# move window to next/previous workspace
bindsym $super+Shift+b move to workspace prev; workspace prev
bindsym $super+Shift+f move to workspace next; workspace next

# previous container
bindsym $super+Tab mark TEMP; [con_mark="LAST"] focus; [con_mark="TEMP"] mark LAST

# back to last workspace
bindsym $super+Escape mark LAST; workspace back_and_forth
bindsym $super+Shift+Escape move to workspace back_and_forth; workspace back_and_forth

# focus the parent/child container
bindsym $super+z mark LAST; focus parent
bindsym $super+Shift+z mark LAST; focus child

# show scratchpad
bindsym $super+s mark LAST; scratchpad show
# move the currently focused window to the scratchpad
bindsym $super+Shift+s move scratchpad

# modes
bindsym $super+$alt+space $return
bindsym $super+shift+m mode "MARK"
bindsym $super+apostrophe mode "GOTO"
# TODO: [y] yank
# TODO: [p] paste
# TODO: [q], [@] macros
# TODO: [f] focus (or maybe [/])

################
# MODES
################

$return {
	bindsym apostrophe mode "GOTO"
	bindsym b mode "BUFFER"
	bindsym g mode "GAPS"
	bindsym i mode "I3"
	bindsym l mode "LAYOUT"
	bindsym r mode "RESIZE"
	bindsym t mode "TMUX"

	bindsym Shift+r mode "MOVE"

	bindsym $super+$alt+space $exit
	bindsym Escape $exit
}

mode "BUFFER" {
	bindsym c kill; $exit
	bindsym r exec i3-input -P 'Rename container: ' -F 'title_format %s'; $exit

	bindsym $super+$alt+space $return
	bindsym Escape $exit
}

mode "MARK" {
	# by name

	bindsym space exec i3-input -F 'mark %s' -P 'Mark name: '; $exit

	# by number

	bindsym grave        mark 0;  $exit
	bindsym 1            mark 1;  $exit
	bindsym 2            mark 2;  $exit
	bindsym 3            mark 3;  $exit
	bindsym 4            mark 4;  $exit
	bindsym 5            mark 5;  $exit
	bindsym 6            mark 6;  $exit
	bindsym 7            mark 7;  $exit
	bindsym 8            mark 8;  $exit
	bindsym 9            mark 9;  $exit
	bindsym 0            mark 10; $exit
	bindsym bracketleft  mark 11; $exit
	bindsym bracketright mark 12; $exit

	bindsym Shift+grave        unmark 0;  $exit
	bindsym Shift+1            unmark 1;  $exit
	bindsym Shift+2            unmark 2;  $exit
	bindsym Shift+3            unmark 3;  $exit
	bindsym Shift+4            unmark 4;  $exit
	bindsym Shift+5            unmark 5;  $exit
	bindsym Shift+6            unmark 6;  $exit
	bindsym Shift+7            unmark 7;  $exit
	bindsym Shift+8            unmark 8;  $exit
	bindsym Shift+9            unmark 9;  $exit
	bindsym Shift+0            unmark 10; $exit
	bindsym Shift+bracketleft  unmark 11; $exit
	bindsym Shift+bracketright unmark 12; $exit

	# by letter

	bindsym a mark A; $exit
	bindsym b mark B; $exit
	# bindsym c mark C; $exit
	bindsym d mark D; $exit
	# bindsym e mark E; $exit
	# bindsym f mark F; $exit
	bindsym g mark G; $exit
	bindsym h mark H; $exit
	bindsym i mark I; $exit
	bindsym j mark J; $exit
	bindsym k mark K; $exit
	bindsym l mark L; $exit
	# bindsym m mark M; $exit
	bindsym n mark N; $exit
	bindsym o mark O; $exit
	bindsym p mark P; $exit
	bindsym q mark Q; $exit
	bindsym r mark R; $exit
	bindsym s mark S; $exit
	bindsym t mark T; $exit
	bindsym u mark U; $exit
	# bindsym v mark V; $exit
	# bindsym w mark W; $exit
	bindsym x mark X; $exit
	bindsym y mark Y; $exit
	bindsym z mark Z; $exit

	bindsym Shift+a unmark A; $exit
	bindsym Shift+b unmark B; $exit
	# bindsym Shift+c unmark C; $exit
	bindsym Shift+d unmark D; $exit
	# bindsym Shift+e unmark E; $exit
	# bindsym Shift+f unmark F; $exit
	bindsym Shift+g unmark G; $exit
	bindsym Shift+h unmark H; $exit
	bindsym Shift+i unmark I; $exit
	bindsym Shift+j unmark J; $exit
	bindsym Shift+k unmark K; $exit
	bindsym Shift+l unmark L; $exit
	# bindsym Shift+m unmark M; $exit
	bindsym Shift+n unmark N; $exit
	bindsym Shift+o unmark O; $exit
	bindsym Shift+p unmark P; $exit
	bindsym Shift+q unmark Q; $exit
	bindsym Shift+r unmark R; $exit
	bindsym Shift+s unmark S; $exit
	bindsym Shift+t unmark T; $exit
	bindsym Shift+u unmark U; $exit
	# bindsym Shift+v unmark V; $exit
	# bindsym Shift+w unmark W; $exit
	bindsym Shift+x unmark X; $exit
	bindsym Shift+y unmark Y; $exit
	bindsym Shift+z unmark Z; $exit

	# reserved

	bindsym c exec notify-send "Reserved: chat";   $exit
	bindsym e exec notify-send "Reserved: editor"; $exit
	bindsym f exec notify-send "Reserved: files";  $exit
	bindsym m exec notify-send "Reserved: music";  $exit
	bindsym v exec notify-send "Reserved: video";  $exit
	bindsym w exec notify-send "Reserved: web";    $exit

	# exit
	bindsym $super+$alt+space $return
	bindsym Escape $exit
}

mode "GOTO" {
	# by symbol

	bindsym space mark LAST;             [urgent=latest] focus; $exit
	bindsym apostrophe mark LAST;        [urgent=latest] focus; $exit
	bindsym $super+apostrophe mark LAST; [urgent=latest] focus; $exit

	# by name

	bindsym Return exec i3-input -F 'mark LAST; [con_mark=%s] focus' -P 'Go to mark: '; $exit

	# by number

	bindsym grave        mark LAST; [con_mark="0"] focus;  $exit
	bindsym 1            mark LAST; [con_mark="1"] focus;  $exit
	bindsym 2            mark LAST; [con_mark="2"] focus;  $exit
	bindsym 3            mark LAST; [con_mark="3"] focus;  $exit
	bindsym 4            mark LAST; [con_mark="4"] focus;  $exit
	bindsym 5            mark LAST; [con_mark="5"] focus;  $exit
	bindsym 6            mark LAST; [con_mark="6"] focus;  $exit
	bindsym 7            mark LAST; [con_mark="7"] focus;  $exit
	bindsym 8            mark LAST; [con_mark="8"] focus;  $exit
	bindsym 9            mark LAST; [con_mark="9"] focus;  $exit
	bindsym 0            mark LAST; [con_mark="10"] focus; $exit
	bindsym bracketleft  mark LAST; [con_mark="11"] focus; $exit
	bindsym bracketright mark LAST; [con_mark="12"] focus; $exit

	# by letter

	bindsym a mark LAST; [con_mark="A"] focus; $exit
	bindsym b mark LAST; [con_mark="B"] focus; $exit
	# bindsym c mark LAST; [con_mark="C"] focus; $exit
	bindsym d mark LAST; [con_mark="D"] focus; $exit
	# bindsym e mark LAST; [con_mark="E"] focus; $exit
	# bindsym f mark LAST; [con_mark="F"] focus; $exit
	bindsym g mark LAST; [con_mark="G"] focus; $exit
	bindsym h mark LAST; [con_mark="H"] focus; $exit
	bindsym i mark LAST; [con_mark="I"] focus; $exit
	bindsym j mark LAST; [con_mark="J"] focus; $exit
	bindsym k mark LAST; [con_mark="K"] focus; $exit
	bindsym l mark LAST; [con_mark="L"] focus; $exit
	# bindsym m mark LAST; [con_mark="M"] focus; $exit
	bindsym n mark LAST; [con_mark="N"] focus; $exit
	bindsym o mark LAST; [con_mark="O"] focus; $exit
	bindsym p mark LAST; [con_mark="P"] focus; $exit
	bindsym q mark LAST; [con_mark="Q"] focus; $exit
	bindsym r mark LAST; [con_mark="R"] focus; $exit
	bindsym s mark LAST; [con_mark="S"] focus; $exit
	bindsym t mark LAST; [con_mark="T"] focus; $exit
	bindsym u mark LAST; [con_mark="U"] focus; $exit
	# bindsym v mark LAST; [con_mark="V"] focus; $exit
	# bindsym w mark LAST; [con_mark="W"] focus; $exit
	bindsym x mark LAST; [con_mark="X"] focus; $exit
	bindsym y mark LAST; [con_mark="Y"] focus; $exit
	bindsym z mark LAST; [con_mark="Z"] focus; $exit

	# by app

	# chat
	bindsym c mark LAST; [title="(Buddy List|finch)"] focus; $exit
	# editor
	bindsym e mark LAST; [title="VIM"] focus; $exit
	# files
	bindsym f mark LAST; [title="lf"] focus; $exit
	# music
	bindsym m mark LAST; [title="(?i)music"] focus; $exit
	# video
	bindsym v mark LAST; [class="vlc"] focus; $exit
	# web
	bindsym w mark LAST; [class="Google-chrome"] focus; $exit

	# exit
	bindsym $super+$alt+space $return
	bindsym Escape $exit
}

mode "I3" {
	# reload the configuration file
	bindsym space reload; $exit
	# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
	bindsym r restart; $exit
	# exit i3 (logs you out of your X session)
	bindsym q exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"; $exit

	bindsym $super+$alt+space $return
	bindsym Escape $exit
}

mode "TMUX" {
	# by workspace
	bindsym space exec $runTmux $(i3-msg -t get_workspaces | jq -r '.[] | select(.focused == true) | .name' | awk '{ print $3 }'); $exit

	# by name
	bindsym n exec i3-input -P 'Session name: ' -F 'exec $runTmux %s'; $exit

	# presets

	# TODO: make these dynamic from the workspace name
	bindsym grave        mark LAST; workspace number 0 $wsLab;     exec $runTmux $nameLab -c /tmp/aoeu; $exit
	bindsym 1            mark LAST; workspace number 1 $wsWeb;     exec $runTmux $nameWeb; $exit
	bindsym 2            mark LAST; workspace number 2 $wsDev;     exec $runTmux $nameDev -c ~/dev; $exit
	bindsym 3            mark LAST; workspace number 3 $wsRemote;  exec $runTmux $nameRemote; $exit
	bindsym 4            mark LAST; workspace number 4 $wsHack;    exec $runTmux $nameHack; $exit
	bindsym 5            mark LAST; workspace number 5 $wsFiles;   exec $runTmux $nameFiles 'lf'; $exit
	bindsym 6            mark LAST; workspace number 6 $wsMedia;   exec $runTmux $nameMedia 'ncmpcpp'; $exit
	bindsym 7            mark LAST; workspace number 7 $wsLit;     exec $runTmux $nameLit -c ~/dev/lit; $exit
	bindsym 8            mark LAST; workspace number 8 $wsMonitor; exec $runTmux $nameMonitor; $exit
	bindsym 9            mark LAST; workspace number 9 $wsRun;     exec $runTmux $nameRun; $exit
	bindsym 0            mark LAST; workspace number 10 $wsChat;   exec $runTmux $nameChat 'TERM=tmux-256color weechat'; $exit
	bindsym bracketleft  mark LAST; workspace number 11 $wsDesign; exec $runTmux $nameDesign; $exit
	bindsym bracketright mark LAST; workspace number 12 $wsGames;  exec $runTmux $nameGames; $exit

	bindsym d            mark LAST; workspace number 4 $wsHack;    exec $runTmux $nameHack -c ~/dotfiles; $exit

	# TODO: open preset for the current workspace

	bindsym $super+$alt+space $return
	bindsym Escape $exit
}

mode "RESIZE" {
	# small
	bindsym $alt+$up resize shrink height 1 px or 1 ppt
	bindsym $alt+$down resize grow height 1 px or 1 ppt
	bindsym $alt+$left resize shrink width 1 px or 1 ppt
	bindsym $alt+$right resize grow width 1 px or 1 ppt
	# medium
	bindsym $up resize shrink height 4 px or 4 ppt
	bindsym $down resize grow height 4 px or 4 ppt
	bindsym $left resize shrink width 4 px or 4 ppt
	bindsym $right resize grow width 4 px or 4 ppt
	# large
	bindsym Shift+$up resize shrink height 16 px or 16 ppt
	bindsym Shift+$down resize grow height 16 px or 16 ppt
	bindsym Shift+$left resize shrink width 16 px or 16 ppt
	bindsym Shift+$right resize grow width 16 px or 16 ppt
	# bigger
	bindsym Control+$up resize shrink height 32 px or 32 ppt
	bindsym Control+$down resize grow height 32 px or 32 ppt
	bindsym Control+$left resize shrink width 32 px or 32 ppt
	bindsym Control+$right resize grow width 32 px or 32 ppt
	# extreme
	bindsym Control+Shift+$up resize shrink height 64 px or 64 ppt
	bindsym Control+Shift+$down resize grow height 64 px or 64 ppt
	bindsym Control+Shift+$left resize shrink width 64 px or 64 ppt
	bindsym Control+Shift+$right resize grow width 64 px or 64 ppt

	bindsym space move right; resize shrink width 36 px or 36 ppt

	bindsym $super+$alt+space $return
	bindsym Escape $exit
}

mode "MOVE" {
	# small
	bindsym $alt+$up move up 1 px
	bindsym $alt+$down move down 1 px
	bindsym $alt+$left move left 1 px
	bindsym $alt+$right move right 1 px
	# medium
	bindsym h move left 4 px
	bindsym j move down 4 px
	bindsym k move up 4 px
	bindsym l move right 4 px
	# large
	bindsym Shift+$up move up 16 px
	bindsym Shift+$down move down 16 px
	bindsym Shift+$left move left 16 px
	bindsym Shift+$right move right 16 px
	# bigger
	bindsym Control+$up move up 32 px
	bindsym Control+$down move down 32 px
	bindsym Control+$left move left 32 px
	bindsym Control+$right move right 32 px
	# extreme
	bindsym Control+Shift+$up move up 64 px
	bindsym Control+Shift+$down move down 64 px
	bindsym Control+Shift+$left move left 64 px
	bindsym Control+Shift+$right move right 64 px

	bindsym $super+$alt+space $return
	bindsym Escape $exit
}

mode "LAYOUT" {
	bindsym grave layout default; $exit
	bindsym 1 layout stacking; $exit
	bindsym 2 layout tabbed; $exit
	bindsym 3 layout splith; $exit
	bindsym 4 layout splitv; $exit

	# split down
	bindsym j split vertical; $exit
	# split up (but really down)
	bindsym k split vertical; $exit
	# split left (but really right)
	bindsym h split horizontal; $exit
	# split right
	bindsym l split horizontal; $exit

	# toggle [stacking, tabbed, splith, splitv]
	bindsym a layout toggle all; $exit
	# toggle [splith, splitv]
	bindsym s layout toggle split; $exit
	# toggle [stacking, tabbed, split]
	bindsym t layout toggle; $exit
	# toggle fullscreen
	bindsym f fullscreen; $exit
	bindsym Control+f fullscreen toggle; $exit
	bindsym Shift+f fullscreen global; $exit
	# toggle [floating, tiled]
	bindsym space floating toggle; $exit

	# borders
	bindsym b mode "BORDER"

	bindsym $super+$alt+space $return
	bindsym Escape $exit
}

mode "BORDER" {
	# cycle through border styles
	bindsym space border toggle; $exit

	bindsym 0 border none; $exit
	bindsym 1 border 1pixel; $exit
	bindsym 2 border normal; $exit

	bindsym $super+$alt+space $return
	bindsym Escape $exit
}

mode "GAPS" {
	bindsym o mode "GAPS-OUTER"
	bindsym i mode "GAPS-INNER"
	bindsym 0 gaps outer current set 0; gaps inner current set 0; $exit
	bindsym Shift+0 gaps outer all set 0; gaps inner all set 0; $exit
	bindsym $super+$alt+space $return
	bindsym Escape $exit
}

mode "GAPS-OUTER" {
	bindsym plus  gaps outer current plus 5
	bindsym minus gaps outer current minus 5
	bindsym 0     gaps outer current set 0

	bindsym Shift+plus  gaps outer all plus 5
	bindsym Shift+minus gaps outer all minus 5
	bindsym Shift+0     gaps outer all set 0

	bindsym $super+$alt+space $return
	bindsym Escape $exit
}

mode "GAPS-INNER" {
	bindsym plus  gaps inner current plus 5
	bindsym minus gaps inner current minus 5
	bindsym 0     gaps inner current set 0

	bindsym Shift+plus  gaps inner all plus 5
	bindsym Shift+minus gaps inner all minus 5
	bindsym Shift+0     gaps inner all set 0

	bindsym $super+$alt+space $return
	bindsym Escape $exit
}

################
# THEME
################

# ~/.i3/config
# i3 config template
# Base16 Paraiso by Jan T. Sott
# template by Matt Parnell, @parnmatt

set $base00 #2f1e2e
set $base01 #41323f
set $base02 #4f424c
set $base03 #776e71
set $base04 #8d8687
set $base05 #a39e9b
set $base06 #b9b6b0
set $base07 #e7e9db
set $base08 #ef6155
set $base09 #f99b15
set $base0A #fec418
set $base0B #48b685
set $base0C #5bc4bf
set $base0D #06b6ef
set $base0E #815ba4
set $base0F #e96ba8

# Window Colours            border  background  text    indicator
client.focused              $base0D $base0D     $base00 $base01
client.focused_inactive     $base02 $base02     $base03 $base01
client.unfocused            $base01 $base01     $base03 $base01
client.urgent               $base02 $base08     $base07 $base08

################
# WORKSPACES
################

# TODO: handle the fact that different computers have different xrandr setups...

################
# APPS
################

# dialogs
for_window [window_role="pop-up"] floating enable, move absolute center
for_window [title="Qalculate!"] floating enable
for_window [class="^Gpick|Pavucontrol$"] floating enable
for_window [class="^copyq$"] border pixel 0, floating enable
for_window [title="^vimmer$"] floating enable
for_window [title="Aseprite"] move position center, floating_maximum_size 1600 x 900

# web
assign [class="^google-chrome" window_role="browser"] ‚Üí $numWeb $wsWeb
for_window [title="^DevTools"] floating disable

# media
assign [class="nuvolaplayer|Vlc|mpv"] ‚Üí $numMedia $wsMedia
assign [title="Popcorn Time"] ‚Üí $numMedia $wsMedia
assign [title="Google Play Music" window_role="pop-up"] ‚Üí $numMedia $wsMedia
assign [class="^zoom$" title="^Zoom$"] ‚Üí $numMonitor $wsMonitor
for_window [class="Vlc|mpv"] border none
for_window [title="Google Play Music" window_role="pop-up"] floating disable, move to workspace $numMedia $wsMedia
for_window [title=".* - Twitch - .*" window_role="browser"] layout splith

# lit
assign [title="(Google Keep|todoist|DevDocs)" window_role="app"] ‚Üí $numLit $wsLit

# games
for_window [class="dota2"] fullscreen
for_window [class="^Godot_Engine$|^Godot_Editor$"] floating enable
for_window [title="^Godot (Engine|Editor)(.*\.tscn| - Project Manager)$"] floating disable
# for_window [class="^Dolphin-emu$|^Launch-faster-melee$|^Launch-fm$" title="^Dolphin$|^launch-faster-melee$"] floating toggle

# chat
assign [class="Pidgin" window_role="(buddy_list|conversation)"] ‚Üí $numChat $wsChat
assign [class="^Slack$"] ‚Üí $numChat $wsChat
assign [title="^finch$"] ‚Üí $numChat $wsChat

# monitor
assign [class="^obs$"] ‚Üí $numMonitor $wsMonitor
assign [class="^zoom$" title="^Zoom Meeting"] ‚Üí $numMonitor $wsMonitor

################
# STARTUP
################

# statusbar
exec_always --no-startup-id ~/bin/bars

# autolock
# exec --no-startup-id xss-lock -n "notify-send -u critical -t 5000 'LOCKING screen in 60 seconds'" -- ~/bin/locker -r
exec --no-startup-id xss-lock -- ~/bin/locker -r

exec --no-startup-id ~/dotfiles/lib/startup.sh

# TODO: wtf
exec --no-startup-id systemctl --user restart sxhkd
