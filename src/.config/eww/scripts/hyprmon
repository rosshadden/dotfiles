#!/usr/bin/env nu

def "refresh workspaces" [] {
	hyprctl workspaces -j
	| from json
	| where name !~ :scratch
	| to json
	| update workspaces $in
}

def "refresh window" [event: record] {
	hyprctl clients -j
	| from json
	| where address == $"0x($event.data)"
	| $in ++ [{}]
	| first
	| to json
	| update window $in
}

def process [line: string] {
	let event = $line | parse "{type}>>{data}" | first
	match $event.type {
		monitoradded | monitorremoved => {
			bars
		},
		activewindowv2 => {
			refresh window $event
		},
		workspace | createworkspace | destroyworkspace | focusedmon => {
			refresh workspaces
		}
	}
}

def listen [] {
	socat -u $"UNIX:/tmp/hypr/($env.HYPRLAND_INSTANCE_SIGNATURE)/.socket2.sock" -
	| lines -s
	| each {|line|
		process $line
	}
}

def update [key: string, value: string] {
	eww update $"($key)=($value)"
}

def init [] {
	refresh workspaces
	hyprctl activewindow -j | update window $in
}

def main [] {
	init
	listen
}
