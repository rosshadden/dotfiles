(deflisten hyprmon "./scripts/hyprmon listen")
(defvar mode "")
(defvar window "{}")
(defvar workspace "{}")
(defvar workspaces "[]")

(defvar debug "")

(defwidget workspaces [monitor]
  (box
    (for ws in workspaces
      (button
        :visible {ws.monitor == monitor.name}
        :class "${ws.id == workspace.id ? 'current' : ''}"
        :tooltip "${ws.lastwindowtitle}"
        :onclick "hyprctl dispatch workspace ${ws.name}"
        "${ws.name}"))))

(defwidget title []
  (label
    :limit-width 48
    :text "${window.title ?: ''}"))

(defwidget bar [monitor]
  (eventbox
    :onscroll "hyprctl dispatch focusmonitor ${monitor.name}; ./scripts/hyprmon change workspace ${monitor.name} {}"
    :onclick "hyprctl dispatch focusmonitor ${monitor.name}"
    (box
      (workspaces :monitor monitor)
      (title)
      "üóì ${formattime(EWW_TIME, "%Y-%m-%d")}"
      "‚è≤ ${formattime(EWW_TIME, "%H:%M:%S")}")))

(deflisten media
  :initial ""
  "playerctl --follow metadata --format {{title}}")

(defwidget info []
  (box
    mode
    media
    (box
      "CPU ${round(EWW_CPU.avg, 0)}%"
      "RAM ${round(EWW_RAM.used_mem_perc, 0)}%"
      (box :visible {EWW_BATTERY != ""}
        {EWW_BATTERY == ""
         ? ""
         : "${EWW_BATTERY?.BAT0?.capacity}% [${EWW_BATTERY?.BAT0?.status}]"}))))



; windows

(defwindow bar [monitor]
  :monitor "${monitor.model}"
  :exclusive true
  :geometry (geometry :x "0%"
                      :y "0%"
                      :width "${monitor.width / monitor.scale - 40}"
                      :height "16px"
                      :anchor "top center")
  (bar :monitor monitor))

(defwindow info [monitor]
  :monitor "${monitor.model}"
  :exclusive true
  :geometry (geometry :x "0%"
                      :y "0%"
                      :width "${monitor.width / monitor.scale - 40}"
                      :height "16px"
                      :anchor "bottom center")
  (info))

(defwindow background []
  :monitor 0
  hyprmon)

(defwindow debug []
  :monitor 0
  :geometry (geometry :x "0%"
                      :y "0%"
                      :width "200px"
                      :height "16px"
                      :anchor "top right")
  debug)

(defvar eos "off")
(defwindow eos []
  :monitor 0
  :geometry (geometry :x "10px"
                      :y "-14px"
                      :width "200px"
                      :height "10px"
                      :anchor "bottom left")
  (combo-box-text
    :items "[off, free, focus, busy]"
    :onchange "eos {}; eww update eos=\"{}\""
    eos))
