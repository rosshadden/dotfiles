################
# SXHKD
################

# reload
super + q
	pkill -USR1 -x sxhkd; notify-send 'sxhkd' 'Reloaded sxhkd config'

################
# SYSTEM
################

# notifications
super + backslash
	dunstctl close
super + control + backslash
	dunstctl close-all
super + shift + backslash
	dunstctl history-pop
super + alt + backslash
	dunstctl context

################
# WINDOWS
################

super + alt + c
	xkill

super + alt + shift + c
	xdotool windowunmap $(xdotool getactivewindow)

# mute window
super + m
	~/bin/mute-window

################
# MEDIA
################

# volume
XF86AudioMicMute
	~/bin/cfg mic !
control + shift + super + alt + m
	~/bin/cfg mic !

# fix keys
XF86Tools
	xdotool keydown --window obs ctrl + shift + Num_Lock; \
	sleep 0.01; \
	xdotool keyup --window obs ctrl + shift + Num_Lock

# app launcher
XF86LaunchA
	rofi -show drun -display-drun launch

# file explorer
XF86Explorer
	~/bin/termoil -- lf

# toggle touchpad
XF86TouchpadToggle
	~/bin/cfg touchpad !

# screenshots
Print
	~/bin/screenshot select
alt + Print
	~/bin/screenshot window
shift + Print
	~/bin/screenshot screen
control + shift + Print
	~/bin/screenshot full

shift + super + alt + {button1,button6,button7}
	playerctl --player=%any,chromium {play-pause,previous,next}

shift + super + alt + {button2,button3,button4,button5}
	~/bin/cfg {volume !, mic !, volume +5,volume -5}
	# xdotool key --clearmodifiers {XF86AudioMute,XF86AudioMicMute,XF86AudioRaiseVolume,XF86AudioLowerVolume}

################
# INTERACTIVE
################

# open killer
super + x
	kill (^ps -u $env.USER -o pid,command | tail -n +2 | rofi -dmenu -multi-select -p "kill" | split column -c ' ' pid | get pid | str to-int)
super + shift + x
	kill -f (^ps -u $env.USER -o pid,command | tail -n +2 | rofi -dmenu -multi-select -p "kill" | split column -c ' ' pid | get pid | str to-int)

################
# APPS
################

# terminal
super + Return
	~/bin/termoil

# terminal + tmux
super + shift + Return
	~/bin/termoil -- tmux -u

# write to clipboard
super + e
	~/bin/termoil -- vimmer

# write to clipboard, starting with SELECTION clipboard
super + shift + e
	~/bin/termoil -- vimmer -p

# volume gui
super + v
	pavucontrol

################
# WM
################

# quit / restart bspwm
super + shift + {_,alt +} q
	bspc {quit,wm -r}

# close / kill
super + {_,shift +} c
	bspc node -{c,k}

# focus or send to the given desktop
super + {_,shift + }{1-9,0,bracketleft,bracketright}
	bspc {desktop -f,node -d} '^{1-9,10,11,12}' --follow

# alternate between the tiled and monocle layout
# super + m
# 	bspc desktop -l next

# send the newest marked node to the newest preselected node
super + y
	bspc node newest.marked.local -n newest.!automatic.local

# swap the current node and the biggest window
super + g
	bspc node -s biggest.window

#
# state/flags
#

# set the window state
super + {t,shift + t,s,f}
	bspc node -t {tiled,pseudo_tiled,floating,fullscreen}

# set the node flags
super + ctrl + {m,x,y,z}
	bspc node -g {marked,locked,sticky,private}

#
# focus/swap
#

# focus the node in the given direction
super + {_,shift + }{h,j,k,l}
	bspc node -{f,s} {west,south,north,east}

# focus the node for the given path jump
super + {u,shift + u,comma,shift + comma}
	bspc node -f @{parent,brother,first,second}

# focus the next/previous window in the current desktop
super + shift + {n,p}
	bspc node -f {next,prev}.local.!hidden.window

# focus the next/previous desktop in the current monitor
super + {n,p}
	bspc desktop -f {next,prev}.local

# focus the last node/desktop
super + {grave,Tab}
	bspc {node,desktop} -f last

# focus the older or newer node in the focus history
super + {_,shift +}apostrophe
	bspc wm -h off; \
	bspc node {older,newer} -f; \
	bspc wm -h on

#
# preselect
#

# preselect the direction
super + ctrl + {h,j,k,l}
	bspc node -p {west,south,north,east}

# preselect the ratio
super + ctrl + {1-9}
	bspc node -o 0.{1-9}

# cancel the preselection for the focused node
super + ctrl + space
	bspc node -p cancel

# cancel the preselection for the focused desktop
super + ctrl + shift + space
	bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

#
# move/resize
#

# move a floating window
super + {Left,Down,Up,Right}
	bspc node -v {-20 0,0 20,0 -20,20 0}

# resze
super + space ; r : {h,j,k,l}
	STEP=20; SELECTION={1,2,3,4}; \
	bspc node -z $(echo "left -$STEP 0,bottom 0 $STEP,top 0 -$STEP,right $STEP 0" | cut -d',' -f$SELECTION) || \
	bspc node -z $(echo "right -$STEP 0,top 0 $STEP,bottom 0 -$STEP,left $STEP 0" | cut -d',' -f$SELECTION)

super + space ; {a,b}
	notify-send {a,b}

super + space ; c
	notify-send c
