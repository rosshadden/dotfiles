################
# VARIABLES
# TODO: make local, instead of making env variables
################

tmuxConfig="~/.tmux.conf"
tmuxLocalConfig="~/.tmux.local.conf"
tmuxTheme="~/dotfiles/lib/themes/tmuxline.conf"
tmuxCords="~/lib/tmux-cords.sh"
tmuxPlugins="~/.tmux/plugins"

################
# SETTINGS
################

set -g default-terminal "$TERM"
set -g default-command "${SHELL}"
# set -g default-shell "$SHELL"

# use vi mode
set -g mode-keys vi
setw -g xterm-keys on

# 0 is far, far away
set -g base-index 1
set -g pane-base-index 1

# directly expose pane titles
set -g set-titles on
set -g set-titles-string "#S: #T"

setw -g monitor-activity on
set -g visual-activity off

# urgency hints
set -g bell-action any
set -g bell-on-alert on

# reindex windows
set -g renumber-windows on

# only resize shared windows
setw -g aggressive-resize on

# shell vi-mode
set -g @shell_mode "vi"

# mice infestation
set -g mouse on

################
# THEME
################

if-shell "test -f $tmuxTheme" "source $tmuxTheme"
set -g status-left "#{prefix_highlight}$(tmux show -gvq status-left)"

################
# MAPPINGS
################

# PREFIX

set -g prefix C-Space
# nested prefix
bind C-Space send-prefix
bind Space send-prefix
unbind C-b

# SESSIONS
bind s run "$tmuxCords session"

# TABS (windows)
bind t run "$tmuxCords tab"

# BUFFERS (panes)
bind b run "$tmuxCords buffer"

# WINDOWS (panes)
bind w run "$tmuxCords window"

# MISC

# same command prompt alias as vim
bind \; command-prompt

# force a reload of the config file
bind r if-shell "test -f $tmuxConfig" "source $tmuxConfig\; display 'Config reloaded.'"

# time
bind T clock-mode

# NAVIGATING

# Smart pane switching with awareness of vim splits
isVim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind -n C-j if-shell "$isVim" "send C-j" "select-pane -D"
bind -n C-k if-shell "$isVim" "send C-k" "select-pane -U"
bind -n C-h if-shell "$isVim" "send C-h" "select-pane -L"
bind -n C-l if-shell "$isVim" "send C-l" "select-pane -R"
bind -n C-\ if-shell "$isVim" "send C-\\" "select-pane -l"

# fallback for weird situations
bind -r Up select-pane -U
bind -r Down select-pane -D
bind -r Left select-pane -L
bind -r Right select-pane -R

bind \ last-pane
bind Tab last-window

# SWAPPING

bind -r S-Down swap-pane -D
bind -r S-Up swap-pane -U
bind -r S-Left swap-pane -U
bind -r S-Right swap-pane -D

# COPY PASTA

# bind Escape copy-mode
bind c copy-mode
bind P paste-buffer
bind -t vi-copy v begin-selection
bind -t vi-copy i cancel
bind -t vi-copy I cancel
bind -t vi-copy a cancel
bind -t vi-copy A cancel
bind -t vi-copy c cancel
bind -t vi-copy C cancel

# MOUSES

# turn mouse on
bind M \
	set -g mouse on \;\
	display "Mouse: ON"

# turn mouse off
bind m \
	set -g mouse off \;\
	display "Mouse: OFF"

# PLUGINS

# installed plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-fpp'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-sessionist'
set -g @plugin 'tmux-plugins/tmux-sidebar'
set -g @plugin 'tmux-plugins/tmux-urlview'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'rosshadden/tmux-pain-control'

# tmux-sidebar
set -g @sidebar-tree "e"
set -g @sidebar-tree-focus "E"
# set -g @sidebar-tree-command "ranger --cmd='set viewmode multipane'"
set -g @sidebar-tree-command "ranger"
set -g @sidebar-tree-pager "cat"

# tmux-highlight-prefix
set -g @prefix_highlight_fg 'white,bright'
set -g @prefix_highlight_bg 'magenta'

# LOCAL

# load local config
if-shell "test -f $tmuxLocalConfig" "source $tmuxLocalConfig"

# INIT

# init TMUX plugin manager.
run "$tmuxPlugins/tpm/tpm"
