#!/usr/bin/env bash

################################
# Get/set config settings
#
# dependencies:
# - ponymix
# - xbacklight
# - synclient
################################

# TODO: normalize settings (vol -> volume, etc.)
# TODO: refactor using better organization than nested conditionals

setting="$1"
value="$2"

modules=( volume brightness battery ip touchpad dpi )

# recursively call itself
config() {
	$0 "$@"
}

normalizeValue() {
	local value=$1

	[[ $value == "!" ]] && local value="toggle"

	echo $value
}

value=$(normalizeValue $value)

if [[ ! $setting ]]; then
	for module in "${modules[@]}"; do
		echo "$module:"
		config "$module"
		echo
	done
elif [[ $setting == "volume" ]]; then
	if [[ ! $value ]]; then
		ponymix get-volume
		exit 0
	fi

	[[ $value == "on" ]] && value="unmute"
	[[ $value == "off" ]] && value="mute"

	if [[ ${value:0:1} == "+" ]]; then
		ponymix increase ${value:1}
	elif [[ ${value:0:1} == "-" ]]; then
		ponymix decrease ${value:1}
	elif [[ "toggle mute unmute" =~ $value ]]; then
		ponymix toggle
	else
		ponymix set-volume $value
	fi
elif [[ $setting == "brightness" ]]; then
	if [[ ! $value ]]; then
		xbacklight -get
		exit 0
	fi

	if [[ ${value:0:1} == "+" ]]; then
		xbacklight -inc ${value:1}
	elif [[ ${value:0:1} == "-" ]]; then
		xbacklight -dec ${value:1}
	else
		xbacklight -set $value
	fi
elif [[ $setting == "battery" ]]; then
	charge=$(acpi | sed -n 's/Battery [0-9]:.*, \([0-9]\{1,3\}\)%.*/\1/p')
	status=$(acpi | sed -n 's/Battery [0-9]: \([A-Z]\).*, .*/\1/p')
	paste <(echo "$charge") <(echo "$status")
elif [[ $setting == "ip" ]]; then
	if [[ $value ]]; then
		# Add wildcard to end to simplify api
		value="$value*"
		# Expand wildcard interfaces
		netPath=/sys/class/net
		interfacePath=$(echo $netPath/$value)
		value=${interfacePath#$netPath/}
	fi
	ips=$(ip addr show $value| pt -e '\d+(\.\d+){3} .*global' | awk '{ print $7 ": " $2 }' | sed -E 's;/[0-9]+;;')
	if [[ $value ]]; then
		ips=$(echo $ips | awk '{ print $2 }')
	fi
	echo "$ips"
elif [[ $setting == "touchpad" ]]; then
	if [[ ! $value ]]; then
		synclient -l | grep "TouchpadOff .*=.*0"
		exit 0
	fi

	if [[ $value == "toggle" ]]; then
		if [[ $(synclient -l | grep "TouchpadOff .*=.*0") ]]; then
			config touchpad "off"
		else
			config touchpad "on"
		fi
	elif [[ $value == "on" ]]; then
		synclient TouchpadOff=0;
	elif [[ $value == "off" ]]; then
		synclient TouchpadOff=1;
	fi
elif [[ $setting == "dpi" ]]; then
	dpi=$(xrdb -query | grep dpi | awk '{ print $2 }');

	if [[ ! $value ]]; then
		echo $dpi
		exit 0
	fi

	# TODO: use [real arguments](http://www.bahmanm.com/blogs/command-line-options-how-to-parse-in-bash-using-getopt)
	# TODO: trim trailing decimals
	if [[ $value == "--scale" ]]; then
		echo "$dpi / 96" | bc -l
	fi
else
	echo "$setting is not (yet?) supported"
fi
