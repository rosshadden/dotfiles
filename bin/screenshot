#!/usr/bin/env bash

################
# Take screenshots and copy path to clipboard.
# Optionally move to public Dropbox folder and copy public URL.
#
# Dependencies:
################

function get-screen-geometry() {
	# Get the location of the mouse
	local XMOUSE=$(xdotool getmouselocation | awk -F "[: ]" '{print $2}')
	local YMOUSE=$(xdotool getmouselocation | awk -F "[: ]" '{print $4}')

	# TODO: get focused screen
	# local coords="$(xdotool getwindowgeometry $(xdotool getactivewindow) | grep Position | awk '{print $2}')"
	# local XMOUSE=$(echo $coords | awk -F "[,]" '{print $1}')
	# local YMOUSE=$(echo $coords | awk -F "[,]" '{print $2}')

	local MONITORS=$(xrandr | grep -o '[0-9]*x[0-9]*[+-][0-9]*[+-][0-9]*')
	for mon in ${MONITORS}; do
		# Parse the geometry of the monitor
		local MONW=$(echo ${mon} | awk -F "[x+]" '{print $1}')
		local MONH=$(echo ${mon} | awk -F "[x+]" '{print $2}')
		local MONX=$(echo ${mon} | awk -F "[x+]" '{print $3}')
		local MONY=$(echo ${mon} | awk -F "[x+]" '{print $4}')

		# Use a simple collision check
		if (( ${XMOUSE} >= ${MONX} )); then
			if (( ${XMOUSE} <= ${MONX}+${MONW} )); then
				if (( ${YMOUSE} >= ${MONY} )); then
					if (( ${YMOUSE} <= ${MONY}+${MONH} )); then
						# We have found our monitor!
						echo "${MONW}x${MONH}+${MONX}+${MONY}"
						exit 0
					fi
				fi
			fi
		fi
	done

	echo "Oh no the mouse is in the void!"
	exit 1
}

function screenshot-x() {
	local type="${1:-select}"
	local copy="/usr/bin/xclip -selection clipboard -target image/png"

	case "${type}" in
		full)
			maim | $copy
			;;
		screen)
			# TODO: get focused screen
			maim --geometry="$(get-screen-geometry)" | $copy
			;;
		window)
			maim --window=$(xdotool getactivewindow) | $copy
			;;
		select)
			maim --select | ${copy}
			;;
		select-window)
			maim --select --tolerance=9999999 | $copy
			;;
		*)
			echo "screenshot type not supported: ${type}"
			exit 1
			;;
	esac
}

function screenshot-wayland() {
	local type="${1:-select}"
	local copy="wl-copy"

	case "${type}" in
		full)
			maim | $copy
			;;
		screen)
			# TODO: get focused screen
			maim --geometry="$(get-screen-geometry)" | $copy
			;;
		window)
			maim --window=$(xdotool getactivewindow) | $copy
			;;
		select)
			grim -g "$(slurp)" - | $copy
			;;
		select-window)
			maim --select --tolerance=9999999 | $copy
			;;
		*)
			echo "screenshot type not supported: ${type}"
			exit 1
			;;
	esac
}

function screenshot() {
	screenshot-wayland
}

screenshot "$@"
